package cf.baradist.task2;

/**
 * Интерфейс определяет методы работы с отдельными битами целочисленного массива.
 */

public interface IBit {

    /**
     * Метод проверяет значение бита с номером n.
     *
     * @param n порядковый номер бита. Нумерация битов ведётся справа налево,
     *          начиная с 0.
     * @return значение true, если значение бита равно 1, и false, если значение
     * бита равно 0.
     * @throws Exception выбрасывается в случае, если номер бита отрицательный
     *                   или выходит за границы массива.
     */

    boolean checkBit(int n) throws Exception;

    /**
     * Метод устанавливает значение бита с номером n в значение 1.
     *
     * @param n порядковый номер бита. Нумерация битов ведётся справа налево,
     *          начиная с 0.
     * @return значение true, если значение бита было изменено на 1, и false,
     * если значение бита уже было равно 1.
     * @throws Exception выбрасывается в случае, если номер бита отрицательный
     *                   или выходит за границы массива.
     */

    boolean turnOnBit(int n) throws Exception;

    /**
     * Метод устанавливает значение бита с номером n в значение 0.
     *
     * @param n порядковый номер бита. Нумерация битов ведётся справа налево,
     *          начиная с 0.
     * @return значение true, если значение бита было изменено на 0, и false,
     * если значение бита уже было равно 0.
     * @throws Exception выбрасывается в случае, если номер бита отрицательный
     *                   или выходит за границы массива.
     */

    boolean turnOffBit(int n) throws Exception;

    /**
     * Метод инвертирует значение бита, т.е. значение 1 заменяет на значение 0,
     * а значение 0 - на значение 1.
     *
     * @param n порядковый номер бита. Нумерация битов ведётся справа налево,
     *          начиная с 0.
     * @return значение true, если значение бита было изменено, и false в
     * противном случае.
     * @throws Exception выбрасывается в случае, если номер бита отрицательный
     *                   или выходит за границы массива.
     */

    boolean invertBit(int n) throws Exception;
}
